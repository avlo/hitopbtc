buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
        //classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1')
    }
}

plugins {
  id "com.palantir.docker" version "0.22.1"
}

group = 'hitop'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.palantir.docker'

bootJar {
    baseName = 'hitop'
    version =  '0.1.1'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
    attributes 'Implementation-Title': 'Gradle Quickstart', 
     					 'Main-Class': 'main.java.hitop.Application'
  }
  baseName = project.name + '-all'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

//jar {
//    manifest {
//        attributes 'Implementation-Title': 'Gradle Quickstart',
//                   //'Implementation-Version': version,
//                   'Main-Class': 'main.java.hello.helloWorld'
//    }
//}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    compile 'org.springframework.boot:spring-boot-devtools'

    compile 'com.neovisionaries:nv-websocket-client:2.8'

    compileOnly 'org.projectlombok:lombok:1.18.2'
		annotationProcessor 'org.projectlombok:lombok:1.18.2'

    compile 'com.google.code.gson:gson:2.8.5'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

